apply plugin: 'kotlin-multiplatform'

repositories {
    google()
    jcenter()
    maven { url "https://dl.bintray.com/korlibs/korlibs" }
}

kotlin {
    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            binaries {
                framework('atter-logic')
            }
        }

        fromPreset(presets.jvm, 'android')
    }

    sourceSets {
        def klockVersion = "1.5.0"
        commonMain.dependencies {
            implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            implementation "com.soywiz.korlibs.klock:klock:$klockVersion"
        }

        androidMain.dependencies {
            api 'org.jetbrains.kotlin:kotlin-stdlib'
            api "com.soywiz.korlibs.klock:klock-android:$klockVersion"
        }
        iosMain.dependencies {
            if (System.getenv('SDK_NAME')?.startsWith("iphoneos")){
                implementation "com.soywiz.korlibs.klock:klock-iosx64:$klockVersion"
            } else {
                implementation "com.soywiz.korlibs.klock:klock-iosarm64:$klockVersion"
            }
        }
    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

tasks.register("packForXCode", Sync) {
    final File frameworkDir = new File(buildDir, "xcode-frameworks")
    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'
    final def framework = kotlin.targets.ios.binaries.getFramework("atter-logic", mode)

    inputs.property "mode", mode
    dependsOn framework.linkTask

    from { framework.outputFile.parentFile }
    into frameworkDir

    doLast {
        new File(frameworkDir, 'gradlew').with {
            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"
            setExecutable(true)
        }
    }
}
tasks.named("build") {
    dependsOn("packForXCode")
}
